DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS room;
DROP TABLE IF EXISTS media;
DROP TABLE IF EXISTS favorite;
DROP TABLE IF EXISTS reserved;

CREATE TABLE users (
id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
name VARCHAR(255) NOT NULL ,
email VARCHAR(255) NOT NULL UNIQUE,
password TEXT NOT NULL,
profile_image VARCHAR(255) ,
description TEXT,
created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE room (
room_id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
user_id INT NOT NULL,
title VARCHAR(255) NOT NULL,
home_type VARCHAR(255) NOT NULL,
room_type VARCHAR(255) NOT NULL,
total_guest INT NOT NULL,
total_rooms INT NOT NULL,
total_bedrooms INT NOT NULL,
total_bathrooms INT NOT NULL,
summary TEXT NOT NULL,
address TEXT NOT NULL,
has_tv BOOLEAN NOT NULL,
has_kitchen BOOLEAN NOT NULL,
has_air_cond BOOLEAN NOT NULL,
price FLOAT NOT NULL,
longitude DOUBLE,
latitude DOUBLE,
city VARCHAR(255) NOT NULL,
country VARCHAR(255) NOT NULL,
is_booked BOOLEAN NOT NULL DEFAULT 0,
created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
FOREIGN KEY(user_id) REFERENCES users(id)
);

CREATE TABLE media (
id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
room_id INT NOT NULL,
file_name VARCHAR(255) NOT NULL,
created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
FOREIGN KEY(room_id) REFERENCES room(room_id)
);

CREATE TABLE favorite (
id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
room_id INT NOT NULL,
user_id INT NOT NULL,
created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
FOREIGN KEY(room_id) REFERENCES room(room_id),
FOREIGN KEY(user_id) REFERENCES users(id)
);

CREATE TABLE reserved (
id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
user_id INT NOT NULL,
room_id INT NOT NULL,
room_creator_id INT NOT NULL,
created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
FOREIGN KEY(user_id) REFERENCES users(id),
FOREIGN KEY(room_id) REFERENCES room(room_id),
FOREIGN KEY(room_creator_id) REFERENCES room(user_id)
);


ALTER TABLE favorite ADD CONSTRAINT uc_favorites_user_item UNIQUE (user_id, room_id);
ALTER TABLE reserved ADD CONSTRAINT uc_reserved_user_booking UNIQUE (user_id, room_id , room_creator_id);